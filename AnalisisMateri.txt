Analisis Materi GIT

Git (Group Inclusive Tour) merupakan version control system (VCS) yang bersifat open source dan gratis. Git memungkinkan tim pengembang untuk melakukan pengerjaan secara bersamaan pada suatu project dan memiliki fitur untuk melacak setiap perubahan yang dilakukan pada sumber kode proyek tersebut. 

Git terbagi menjadi 2 sistem, yaitu centralized dan distributed. Centralized artinya bekerja menggunakan satu server untuk menyimpan data dari project. Sedangkan pada distributed data project disimpan di lokal dan juga di server, sehingga saat terjadi corrupt pada server data masih tetap aman karena terdapat backup di lokal.

Fitur-fitur yang dapat digunakan pada Git yaitu:
1. Version control
Dimana Git menyimpan perubahan yang diubah pada sumber kode sehingga pengembang dapat mengelola dan memantau perubahan code
2. Git Branch
Penambahan cabang baru dari cabang utama sehingga tidak mengganggu sumber code utama saat pengembang akan menambahkan fitur baru. 
3. Merge
Penggabungan perubahan yang ada pada branch baru dengan branch utama.
4. Staging area
Pemilihan perubahan yang akan di-commit ke repository
5. Rebase
Menggabungkan atau menggeser commit base, sehingga commit yang telah dilakukan akan di-commit kembali di atas branch utama yang baru
6. Hooks
Script yang dijalankan secara otomatis pada suatu peristiwa, seperti saat push atau commit.
7. GUI Tools
Memudahkan penggunaan fitur-fitur Git bagi pengguna.
8. Commit
Merekam perubahan yang terjadi pada repository
9. Push
Melakukan update pada data di remote repository

Keunggulan Git yaitu: 
1. dapat mengelola versi kode sumber dengan mudah dan efisien; 
2. Dapat melakukan branching dan merging dengan mudah dan aman; 
3. Melacak perubahan dan siapa yang membuat perubahan pada kode sumber; 
4. Performa cepat dan stabil
Kelemahan Git yaitu: 
1. Fitur yang kompleks dan terkadang membingungkan bagi pengguna yang kurang berpengalaman; 
2. Memerlukan pemahaman yang baik tentang konsep dasar Git, seperti repository, commit, branching, dan merging; 
3. Sulit digunakan untuk pengelolaan file biner atau non-teks, seperti gambar atau video.

Selain Git, terdapat juga version control lain yaitu Gitlab dan Github. Gitlab dan Github menyediakan layanan akses remote ke Git repositories. Gitlab juga dapat digunakan untuk melakukan hosting project yang bersifat static. 

Selain pengetahuan mengenai pemahaman tentang apa itu Git, meteri yang disediakan juga berisikan langkah-langkah beserta perintah Git yang dapat dijalankan dalam melakukan modifikasi repository lokal maupun remote. Perintah pertama yang diberikan adalah cara untuk menggunakan Git, yaitu melakukan inisialisasi repository lokal. Namun sebelum melakukan perintah tersebut, pastikan bahwa git sudah terdaftar menggunakan akun pengguna. Penambahan akun dapat dilakukan dengan menggunakan command 'git config --global user.name "UserName"' dan command 'git config --global user.email "Email"'. Untuk memastikan apakah akun sudah berhasil ditambahkan, dapat dijalankan perintah 'git config --list'. Kemudian dapat dicek pada bagian user.name dan user.email apakah email sudah berhasil ditambahkan. Kita bisa membuat repository baru di lokal menggunakan command ‘git init’ yang dijalankan melalui git bash. Langkahnya adalah dengan membuat folder baru atau memilih folder yang telah ada sebelumnya kemudian klik kanan dan pilih open git bash here. Kemudian jalankan perintah ‘git init’ pada bash untuk membuat repository di folder tersebut.

Kemudian command ‘git add’ digunakan untuk menambah file/folder yang ada di dalam folder tersebut ke repository yang telah dibuat. Untuk menambah semua file yang ada di suatu folder ke dalam repository, gunakan perintah ‘git add .’. Kemudian untuk merekam perubahan yang telah dilakukan, perlu dilakukan commit terlebih dahulu. Setiap kontributor bisa memberikan konfirmasi update file pada proyek yang dikerjakan dengan memberikan pesan yang jelas saat melakukan commit. Perintah ‘git commit -m “<Pesan>”’ digunakan saat ingin melakukan commit perubahan. Setelah perubahan direkam, pengembang dapat menambahkan remote repository di github untuk inisialisasi penambahan repository remote yang ada di Github, dengan menggunakan perintah ‘git remote add origin <link repo>’. Setelah remote berhasil ditambahkan, pengembang dapat melakukan push untuk menambahkan perubahan yang dilakukan di repository lokal ke repository yang ada di Github dengan menggunakan perintah ‘git push -u origin <branch>’. Bagi pengembang lain yang ingin mengambil data terbaru yang telah ditambahkan di repository Github ke repository lokal, dapat digunakan perintah ‘git pull origin’.

Pada saat pengembang akan mengerjakan fitur baru, maka code yang ditambahkan oleh pengembang tersebut seringnya berada di branch yang lain. Alasan dibuatnya cabang baru saat pengembangan adalah supaya code yang baru ditambahkan tidak mengganggu kode sumber utama. Untuk menggabungkan commit yang telah ditambahkan di branch yang baru tersebut ke branch utama, maka digunakanlah fitur merge. Jika terdapat conflict dikarenakan terdapat perbedaan isi file yang tidak dapat terselesaikan, maka pengembang dapat memilih untuk menerima perubahan dari salah satu branch atau menerima keduanya.
Untuk mengubah branch yang digunakan untuk commit pengembang, maka digunakanlah fitur checkout.Saat pengembang merasa bahwa commit yang dilakukan merupakan commit yang buruk atau ada file yang tidak ingin dilakukan commit, maka pengembang dapat menggunakan fitur git revert yang berfungsi untuk mengembalikan keadaan repository lokal ke keadaan dari suatu versi yang ditandai dengan penggunaan code yang didapatkan dari Github menu commit. 

Selain itu, Git juga menyediakan fitur otomasi yaitu CI/CD. CI (Continuous Integration) adalah proses integrasi kode ke dalam repository dan nantinya akan dilakukan pengujian secara otomatis, cepat, dan sering. CD (Continuous Delivery) mempersiapkan hal-hal yang dibutuhkan seperti infrastruktur, database, dan file-file penting lainnya yang akan memudahkan proses deployment. Proses terakhir adalah CD (Continuous Deployment) akan melakukan testing ulang dan pengecekan kompatibilitas dengan server. Di proses ini juga terdapat otomasi deploy sumber kode. CI/CD di Github dapat dibuat menggunakan fitur action dari github.

Github memiliki beberapa fitur dokumentasi gratis yang dapat digunakan, yaitu issue dan wiki. Issue pada Git adalah fitur yang memungkinkan pengguna untuk melacak masalah atau permintaan fitur pada proyek software. Sedangkan Wiki adalah fitur yang memungkinkan pengguna untuk membuat dan mengelola dokumentasi proyek perangkat lunak. Biasanya Wiki berisikan panduan pengguna, spesifikasi teknis serta petunjuk teknis.
